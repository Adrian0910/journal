{"version":3,"sources":["helpers/fileUpload.js","firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","actions/notes.js","components/notes/NotesAppBar.js","hooks/useForm.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","actions/ui.js","actions/auth.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","NotesAppBar","date","useDispatch","active","useSelector","state","className","moment","format","name","style","display","onChange","e","target","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","document","querySelector","value","onClick","click","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","NothingSelected","JournalEntry","noteDate","backgroundSize","backgroundImage","JournalEntries","map","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","log","message","logout","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9be647b9.chunk.js","sourcesContent":["\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dv4exgmpv/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n\r\n        if( resp.ok ){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n    \r\n}\r\n\r\n\r\n","\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD0dvhkuSaKYXkTMm1yMUmamQ537hScHiw\",\r\n    authDomain: \"react-app-cursos-53892.firebaseapp.com\",\r\n    projectId: \"react-app-cursos-53892\",\r\n    storageBucket: \"react-app-cursos-53892.appspot.com\",\r\n    messagingSenderId: \"391263224831\",\r\n    appId: \"1:391263224831:web:77d806f53596b796bc1dca\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n firebase.initializeApp(firebaseConfig);\r\n\r\n //Reference to the database\r\n const db = firebase.firestore();\r\n //auth provider\r\n const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n export {\r\n     db, \r\n     googleAuthProvider, \r\n     firebase,\r\n};\r\n","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    \r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapChild => {\r\n        notes.push({\r\n            id: snapChild.id,\r\n            ...snapChild.data()\r\n        })\r\n    });\r\n    return notes;\r\n\r\n}\r\n\r\n\r\n","\r\n\r\nexport const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { db } from '../firebase/firebase-config';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n        \r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ) );\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();                \r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n        \r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState ) => {\r\n         \r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});\r\n\r\n","import moment from 'moment';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = (date) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector( state => state.notes );\r\n\r\n\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) );\r\n    }\r\n\r\n    const handlepictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if( file ) {\r\n            dispatch( startUploading(file) );\r\n        }\r\n        document.querySelector('#fileSelector').value = '';\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ moment().format(\"MMM YYYY\") }</span>\r\n            \r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlepictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    // code here\r\n    const dispatch = useDispatch();    \r\n\r\n    const { active: note } = useSelector( state => state.notes );\r\n    \r\n    const [ formValues, handleInputChange, reset ] = useForm(note);\r\n    const { body, title } = formValues;\r\n    \r\n    const activeId = useRef(note.id);\r\n    \r\n    useEffect(() => {\r\n\r\n        if( note.id !== activeId.current ){\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch( \r\n            activeNote( formValues.id, {...formValues} ) \r\n            );\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting(formValues.id) );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    (\r\n                        <div className=\"notes__file\">\r\n                            <img \r\n                                className=\"notes__image\"\r\n                                src={ note.url }\r\n                                alt=\"scenery\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <button \r\n                    className=\"btn btn-danger\"\r\n                    onClick={ handleDelete }\r\n                >\r\n                    Delete\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ( {id, date, title, body, url} ) => {\r\n\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( \r\n                activeNote( id, {\r\n                    date, title, body, url\r\n                })\r\n        );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__bounceInDown animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            {\r\n                url && // if there is an url, then render the image\r\n                <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                \r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p \r\n                    className=\"journal__entry-content\"\r\n                >\r\n                     {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entries\"\r\n        >\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err \r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading  = () => ({\r\n    type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n});\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport {types} from '../types/types';\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\n//async action\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user }) => {\r\n                dispatch( login( user.uid, user.displayName ));\r\n\r\n                dispatch( finishLoading() );\r\n            }).catch( e => {\r\n                console.log(e);\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Faild', e.message, 'error');\r\n            });\r\n        \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async ({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            }).catch( e => {\r\n                console.log(e);\r\n                Swal.fire('Faild', e.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            }).catch( e => {\r\n                console.log(e);\r\n                Swal.fire('Faild', e.message, 'error');\r\n            }); \r\n    }\r\n}\r\n\r\n// action called when user logs in\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName,\r\n        }\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n})\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\n\r\nimport { JournalEntries } from './JournalEntries';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name} </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar'\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector( state => state.notes );\r\n    \r\n\r\n    return (\r\n        <div \r\n            className=\"journal__main-content animate__animated animate__fadeIn\"\r\n            >\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? ( <NoteScreen /> )\r\n                        : ( <NothingSelected /> )\r\n                }\r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    //Dispatches the login action\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector( state => state.ui );\r\n\r\n    //Initial state\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    //obj destructuring\r\n    const {email,password} = formValues;\r\n\r\n    // action Submit form\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword(email, password) ); //dispatch the action login from auth.js\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email} //value from destructuring\r\n                    onChange={handleInputChange} //from initial state\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password} //value from destructuring\r\n                    onChange={handleInputChange} //from initial state\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                        Create new account\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport validator from 'validator'\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    // implement dispatch actions\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    //Initial state\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    //obj destructuring\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    // action Submit form\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( isFormValid() ){\r\n           dispatch( startRegisterWithEmailPasswordName(email, password, name) );\r\n        }\r\n\r\n    }\r\n\r\n    // Validate form\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0 ){\r\n            dispatch(setError('Name is require'));\r\n            return false;\r\n        } else if ( !validator.isEmail(email) ){\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        }else if( password !== password2 || password.length < 5 ){\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n\r\n            >\r\n\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                        Alredy registyred?\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n                <Route exact\r\n                    path='/auth/login' \r\n                    component={LoginScreen} \r\n                />\r\n\r\n                <Route exact\r\n                    path='/auth/register' \r\n                    component={RegisterScreen} \r\n                />\r\n\r\n                <Redirect to='/auth/login' />\r\n\r\n            </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest //el resto de los componentes\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated )\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest //el resto de los componentes\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated )\r\n                ? (<Redirect to=\"/\" />)\r\n                : (<Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport firebase from 'firebase/compat/app';\r\n\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    // auth state \r\n    useEffect(() => {\r\n\r\n        //observable\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            \r\n            if( user?.uid ){\r\n                dispatch(login( user.uid, user.displayName ));\r\n                setIsLoggedIn(true);\r\n                \r\n                // loadNotes(user.id);\r\n                dispatch( startLoadingNotes(user.uid) );\r\n                \r\n\r\n            }else {\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if( checking ){\r\n        return(\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                    />\r\n\r\n                    <PrivateRoute exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                    />\r\n                    <Redirect to='/auth/login' />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload,\r\n      }\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null,\r\n      }\r\n    case types.uiStartLoading:\r\n        return{\r\n            ...state,\r\n            loading: true\r\n        }\r\n    case types.uiFinishLoading:\r\n        return{\r\n            ...state,\r\n            loading: false\r\n        }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/*\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active: {\r\n            id: 'KASKLDJALKSDJ129387123',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 12387612387126\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        \r\n        case  types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n    \r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            } \r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}","//Create store\r\n\r\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk'; //middleware with thumb\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\n//Next line is for using redux dev tools\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n// const to combine all reducers \"root reducer\"\r\nconst reducers = combineReducers({\r\n    //our individual reducers\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\nexport  const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )    \r\n);\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n//Actions that are going to be dispatched to the reducer\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n            }\r\n        case types.logout:\r\n            return{\r\n                //void obj  \r\n            }\r\n    \r\n        default:\r\n            //state it's a void obj\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\n// Provider is a react component that allows us to access the store\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}